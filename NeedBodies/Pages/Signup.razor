@page "/signup"

@using NeedBodies.Data
@using NeedBodies.Auth
@inject UserService userService
@inject IJSRuntime js
@inject NavigationManager navManager
@inject AuthenticationStateProvider authStateProvider

<AuthorizeView>
    <NotAuthorized>
        <Row>
            <Column>
                <Card Margin="Margin.Is4.OnY">
                    <CardHeader>
                        <CardTitle>Sign up</CardTitle>
                    </CardHeader>
                    <CardBody>
                        <Field Horizontal>
                            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Name</FieldLabel>
                            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                <TextEdit Role="TextRole.Text" Placeholder="Name" @bind-Text="@strName" />
                            </FieldBody>
                        </Field>
                        <Field Horizontal>
                            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Email</FieldLabel>
                            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                <TextEdit Role="TextRole.Email" Placeholder="Email" @bind-Text="@strEmail" />
                            </FieldBody>
                        </Field>
                        <Field Horizontal>
                            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Phone</FieldLabel>
                            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                <TextEdit Role="TextRole.Telephone" Placeholder="Phone" @bind-Text="@strPhone" />
                            </FieldBody>
                        </Field>
                        <Field Horizontal>
                            <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Password</FieldLabel>
                            <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                <TextEdit Role="TextRole.Password" Placeholder="Password" @bind-Text="@strPassword" />
                            </FieldBody>
                        </Field>

                        <Button Color="Color.Primary" Clicked="@SignUpUserAsync">Sign up</Button>
                    </CardBody>
                </Card>
            </Column>
        </Row>
    </NotAuthorized>
</AuthorizeView>

@code {
    string? strName { get; set; }
    string? strEmail { get; set; }
    string? strPhone { get; set; }
    string? strPassword { get; set; }

    public async Task SignUpUserAsync()
    {
        User newUser = null;
        string message = null;

        try
        {
            newUser = await Utilities.AddUser(strName, strPhone, strEmail, strPassword);
        }
        catch(Exception exc)
        {
            await js.InvokeVoidAsync("alert", exc.ToString());
            return;
        }

        if (newUser.Games != "")
        {
            // display message
            await js.InvokeVoidAsync("alert", newUser.Games);
            return;
        }

        userService.addUser(newUser);
        var userAuthStateProvider = (UserAuthenticationStateProvider)authStateProvider;
        await userAuthStateProvider.UpdateAuthenticationState(new UserSession
        {
            Name = newUser.Name,
            Role = newUser.Role,
            ID = newUser.ID
        });

        navManager.NavigateTo("/", true);
    }
}

