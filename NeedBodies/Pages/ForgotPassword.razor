@page "/forgot"

@using System.Net.Mail
@using NeedBodies.Auth
@using NeedBodies.Data
@inject UserService userService
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

@if (Complete == false)
{
    <AuthorizeView>
        <NotAuthorized>
            <Container Fluid Width="Width.Is50">
                <Column>
                    <Card Margin="Margin.Is4.OnY">
                        <CardHeader>
                            <CardTitle>Forgot password</CardTitle>
                        </CardHeader>
                        <CardBody>
                            <Field Horizontal>
                                <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is2.OnDesktop">Email</FieldLabel>
                                <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is10.OnDesktop">
                                    <TextEdit Role="TextRole.Email" Placeholder="Email" @bind-Text="@strEmail" />
                                </FieldBody>
                            </Field>

                            <Button Color="Color.Primary" Clicked="SendForgotPasswordAsync" Loading="@isLoading">Send password reset link</Button>
                        </CardBody>
                    </Card>
                </Column>
            </Container>
        </NotAuthorized>
    </AuthorizeView>
}
else
{
        <Text>@pageMessage</Text>
}


@code{

    private string strEmail { get; set; }
    private string pageMessage { get; set; }
    private bool Complete = false;
    private bool isLoading = false;

    protected async Task SendForgotPasswordAsync()
    {
        isLoading = true;

        Utilities.Email Emailer = new Utilities.Email();
        await Emailer.Initialize();
        pageMessage = await Emailer.SendForgotPassword(strEmail, userService);

        Complete = true;

        isLoading = false;

        await InvokeAsync(() => StateHasChanged());
    }
}